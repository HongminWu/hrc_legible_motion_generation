#include "Kinematics.hpp"
#include <iostream>

using namespace std;

Kinematics::Kinematics()
{

}

void Kinematics::setClosestJoint(int value) {
	closestJoint = value;
}

void Kinematics::setx0d(Vector3d& value) {
	x0d = value;
}

MatrixXd Kinematics::getPseudoInverse(MatrixXd& J) {
		MatrixXd result;

	JacobiSVD<MatrixXd> svd(J, ComputeFullU | ComputeFullV);
	MatrixXd U = svd.matrixU();
	MatrixXd V = svd.matrixV();

	MatrixXd S = svd.singularValues().asDiagonal();
	MatrixXd Sfull = MatrixXd::Zero(3,7);

	double x = 5;		//tolerance
	for(int i = 0; i < S.rows(); i++) {
		if(S.maxCoeff() < x*S(i,i) && abs(S(i,i)) > 1e-4) {	//1e-5
			Sfull(i,i) = 1/S(i,i);
		}
	}
	MatrixXd Sp = Sfull.transpose();

	result = V*Sp*U.transpose();
	return result;
}

//computes the inverse kinematics with null-space constraints, takes the previous angles and the cartesian velocity and returns the angular velocity
// VectorXd Kinematics::getCurrentVelocities(MatrixXd& ys, MatrixXd& yds, VectorXd& prevAngles, VectorXd& ts, int t) {
// 	MatrixXd J(3,7), Jp(7,3), Jt(7,3), J0(3,7);	//all 7 joint angles for all times
// 	VectorXd q(7), term1(7), yds_block(3);
// 	VectorXd currentVelocities(7);	//to be published
// 	double timeStep = ts[1] - ts[0];

// 	q = prevAngles;

// 	J = getJacobian(q);
// 	J0 = getJ0(q);
// 	Jp = getPseudoInverse(J);  	//pseudoinverse is very unstable 
// 	Jt = J.transpose();				//transpose is not very precise, but still better, so it's being used in term1

// 	Vector3d deltaY = Vector3d::Zero();
// 	if(t < ts.size()-1) {
// 		deltaY = ys.block(t+1,0,1,3).transpose()-getEndEffectorPosition(q);	//the difference between the real end effector position and the actual position of the dmp
// 	}

// 	for(int i = 0; i<3; i++) {
// 		yds_block[i] = yds(t,i);		//velocity in the current time step 
// 	}

// 	//term1 = Jp*yds_block;	//inverse kinematics
// 	term1 = Jp*deltaY/timeStep;
// 	//null space constraints
// 	//x0d comes from vrep via subscriber (global variable)
// 	MatrixXd term2 = J0*(MatrixXd::Identity(7,7) - Jp*J);
// 	Vector3d test; test << 0,0,-100000;
// 	VectorXd term3 = getPseudoInverse(term2)*(x0d - J0*Jp*yds_block);
// 	currentVelocities =  term1; // + 0.2*term3;		//add here the IK term, the 0.3 determines how much the link avoidance affects the motion

// 	return currentVelocities;
// }

VectorXd Kinematics::getCurrentVelocities(VectorXd& desiredX, VectorXd& desiredXd, VectorXd& q, double timeStep) {
	MatrixXd J(3,7), Jp(7,3), Jt(7,3), J0(3,7);	//all 7 joint angles for all times
	VectorXd term1(7), yds_block(3);
	VectorXd currentVelocities(7);	//to be published

	J = getJacobian(q);
	J0 = getJ0(q);
	Jp = getPseudoInverse(J);  	//pseudoinverse is very unstable 
	Jt = J.transpose();				//transpose is not very precise, but still better, so it's being used in term1

	Vector3d deltaY = desiredX - getEndEffectorPosition(q);	//the difference between the real end effector position and the actual position of the dmp

	//term1 = Jp*yds_block;	//inverse kinematics
	term1 = Jp*deltaY/timeStep;
	//null space constraints
	//x0d comes from vrep via subscriber (global variable)
	MatrixXd term2 = J0*(MatrixXd::Identity(7,7) - Jp*J);
	Vector3d test; test << 0,0,-100000;
	VectorXd term3 = getPseudoInverse(term2)*(x0d - J0*Jp*desiredXd);
	currentVelocities =  term1; // + 0.2*term3;		//add here the IK term, the 0.3 determines how much the link avoidance affects the motion

	return currentVelocities;
}

//function computes forward kinematics using ys which includes all joint angles, implemented below
Vector3d Kinematics::getEndEffectorPosition(VectorXd& q) {
	MatrixXd transformMat(4,4), aQualisys(4,4);
	Vector3d position;
	transformMat = forwardKinematics(q);
	VectorXd temp(4); 
	VectorXd offsetEndEff(4); offsetEndEff << 0, 0, 0.078, 1;
	aQualisys = transformation(0, 0, 0, PI/2);	//rotation around z axis
	temp = transformMat*offsetEndEff;		//not in world frame -> has to be multiplied with matrix

	position[0] = temp[0];
	position[1] = temp[1];
	position[2] = temp[2];
	
	Vector3d offsetBase; offsetBase << 0, 0, 0.31;
	//Vector3d offsetTable; offsetTable << -0.8, -0.275, 0.75; 	//this is with respect to the world frame, VREP
	//Vector3d offsetTable; offsetTable << -0.536, 2.678, 1.166321;	//Unity
	//Vector3d offsetTable; offsetTable << 1.281, 1.168, -0.006;	//qualisys   --origin version
	Vector3d offsetTable; offsetTable << 1.602, 0.271, -0.006;	//qualisys    //before task transfer case, used in vr experiments
	//Vector3d offsetTable; offsetTable << 1.473, 1.191, 0;	//qualisys
	
	//Vector3d offsetTable; offsetTable << 0.842, 1.079, -0.006;	//qualisys    //for task transfer case
	return offsetTable + offsetBase + position;
}

//function computes end effector velocity from joint velocities, uses getJacobian() function, implemented below
/*MatrixXd Kinematics::getEndEffectorVelocity(MatrixXd& ys, MatrixXd& yds, VectorXd& ts) {
	double q1 = ys(0), q2 = ys(1), q3 = ys(2), q4 = ys(3), q5 = ys(4), q6 = ys(5), q7 = ys(6);
	MatrixXd jacobian(3,7);  	//jacobian has 3 rows (3 cartesian dimenstions) and 7 rows (7 joints)
	MatrixXd velocity(ts.size(),3);		//x,y,z velocity for all times
	VectorXd temp;                      //just to store temporary values in for loop
	VectorXd q;

	for(int t = 0; t < ts.size(); t++) {
		q = ys.block(t,0,1,7);
		jacobian = getJacobian(q);
		temp = jacobian*yds.row(t).transpose();
		velocity(t,0) = temp[0];
		velocity(t,1) = temp[1];
		velocity(t,2) = temp[2];
	}
	return velocity;
}*/

VectorXd Kinematics::getEndEffectorVelocity(VectorXd& qd) {

	MatrixXd J = getJacobian(qd);	//<-WRONG, has to be q
	return J*qd;
}

//function to get the Jacobian, implemented below, only used for the getEndEffectorVelocity function
MatrixXd Kinematics::getJacobian(VectorXd& q) {
	MatrixXd jacobian(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];
	//the following jacobian was computed symbolically with MATLAB with the forward kinematics in the getEndEffectorPosition function
	jacobian(0,0) = (2*sin(q1)*sin(q2))/5 - (39*cos(q6)*(sin(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) - cos(q4)*sin(q1)*sin(q2)))/500 + (39*sin(q6)*(cos(q5)*(cos(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) + sin(q1)*sin(q2)*sin(q4)) + sin(q5)*(cos(q1)*cos(q3) - cos(q2)*sin(q1)*sin(q3))))/500 - (39*sin(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)))/100 + (39*cos(q4)*sin(q1)*sin(q2))/100;
	jacobian(0,1) = - (2*cos(q1)*cos(q2))/5 - (39*cos(q6)*(cos(q1)*cos(q2)*cos(q4) + cos(q1)*cos(q3)*sin(q2)*sin(q4)))/500 - (39*sin(q6)*(cos(q5)*(cos(q1)*cos(q2)*sin(q4) - cos(q1)*cos(q3)*cos(q4)*sin(q2)) + cos(q1)*sin(q2)*sin(q3)*sin(q5)))/500 - (39*cos(q1)*cos(q2)*cos(q4))/100 - (39*cos(q1)*cos(q3)*sin(q2)*sin(q4))/100;
	jacobian(0,2) = - (39*sin(q4)*(cos(q3)*sin(q1) + cos(q1)*cos(q2)*sin(q3)))/100 - (39*sin(q6)*(sin(q5)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) - cos(q4)*cos(q5)*(cos(q3)*sin(q1) + cos(q1)*cos(q2)*sin(q3))))/500 - (39*cos(q6)*sin(q4)*(cos(q3)*sin(q1) + cos(q1)*cos(q2)*sin(q3)))/500;
	jacobian(0,3) = (39*cos(q1)*sin(q2)*sin(q4))/100 - (39*cos(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)))/100 - (39*cos(q5)*sin(q6)*(sin(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) + cos(q1)*cos(q4)*sin(q2)))/500 - (39*cos(q6)*(cos(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) - cos(q1)*sin(q2)*sin(q4)))/500;
	jacobian(0,4) = -(39*sin(q6)*(sin(q5)*(cos(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) - cos(q1)*sin(q2)*sin(q4)) - cos(q5)*(cos(q3)*sin(q1) + cos(q1)*cos(q2)*sin(q3))))/500;
	jacobian(0,5) = (39*sin(q6)*(sin(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) + cos(q1)*cos(q4)*sin(q2)))/500 + (39*cos(q6)*(cos(q5)*(cos(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) - cos(q1)*sin(q2)*sin(q4)) + sin(q5)*(cos(q3)*sin(q1) + cos(q1)*cos(q2)*sin(q3))))/500;
	jacobian(0,6) = 0;

	jacobian(1,0) = (39*sin(q6)*(cos(q5)*(cos(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) - cos(q1)*sin(q2)*sin(q4)) + sin(q5)*(cos(q3)*sin(q1) + cos(q1)*cos(q2)*sin(q3))))/500 - (39*cos(q6)*(sin(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)) + cos(q1)*cos(q4)*sin(q2)))/500 - (2*cos(q1)*sin(q2))/5 - (39*sin(q4)*(sin(q1)*sin(q3) - cos(q1)*cos(q2)*cos(q3)))/100 - (39*cos(q1)*cos(q4)*sin(q2))/100;
	jacobian(1,1) = - (2*cos(q2)*sin(q1))/5 - (39*cos(q6)*(cos(q2)*cos(q4)*sin(q1) + cos(q3)*sin(q1)*sin(q2)*sin(q4)))/500 - (39*sin(q6)*(cos(q5)*(cos(q2)*sin(q1)*sin(q4) - cos(q3)*cos(q4)*sin(q1)*sin(q2)) + sin(q1)*sin(q2)*sin(q3)*sin(q5)))/500 - (39*cos(q2)*cos(q4)*sin(q1))/100 - (39*cos(q3)*sin(q1)*sin(q2)*sin(q4))/100;
	jacobian(1,2) = (39*sin(q4)*(cos(q1)*cos(q3) - cos(q2)*sin(q1)*sin(q3)))/100 + (39*sin(q6)*(sin(q5)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) - cos(q4)*cos(q5)*(cos(q1)*cos(q3) - cos(q2)*sin(q1)*sin(q3))))/500 + (39*cos(q6)*sin(q4)*(cos(q1)*cos(q3) - cos(q2)*sin(q1)*sin(q3)))/500;
	jacobian(1,3) = (39*cos(q6)*(cos(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) + sin(q1)*sin(q2)*sin(q4)))/500 + (39*cos(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)))/100 + (39*sin(q1)*sin(q2)*sin(q4))/100 + (39*cos(q5)*sin(q6)*(sin(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) - cos(q4)*sin(q1)*sin(q2)))/500;
	jacobian(1,4) = (39*sin(q6)*(sin(q5)*(cos(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) + sin(q1)*sin(q2)*sin(q4)) - cos(q5)*(cos(q1)*cos(q3) - cos(q2)*sin(q1)*sin(q3))))/500;
	jacobian(1,5) = - (39*sin(q6)*(sin(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) - cos(q4)*sin(q1)*sin(q2)))/500 - (39*cos(q6)*(cos(q5)*(cos(q4)*(cos(q1)*sin(q3) + cos(q2)*cos(q3)*sin(q1)) + sin(q1)*sin(q2)*sin(q4)) + sin(q5)*(cos(q1)*cos(q3) - cos(q2)*sin(q1)*sin(q3))))/500;
	jacobian(1,6) = 0;

	jacobian(2,0) = 0;
	jacobian(2,1) = (39*cos(q2)*cos(q3)*sin(q4))/100 - (39*cos(q4)*sin(q2))/100 - (39*sin(q6)*(cos(q5)*(sin(q2)*sin(q4) + cos(q2)*cos(q3)*cos(q4)) - cos(q2)*sin(q3)*sin(q5)))/500 - (39*cos(q6)*(cos(q4)*sin(q2) - cos(q2)*cos(q3)*sin(q4)))/500 - (2*sin(q2))/5;
	jacobian(2,2) = (39*sin(q6)*(cos(q3)*sin(q2)*sin(q5) + cos(q4)*cos(q5)*sin(q2)*sin(q3)))/500 - (39*sin(q2)*sin(q3)*sin(q4))/100 - (39*cos(q6)*sin(q2)*sin(q3)*sin(q4))/500;
	jacobian(2,3) = (39*cos(q5)*sin(q6)*(cos(q2)*cos(q4) + cos(q3)*sin(q2)*sin(q4)))/500 - (39*cos(q6)*(cos(q2)*sin(q4) - cos(q3)*cos(q4)*sin(q2)))/500 - (39*cos(q2)*sin(q4))/100 + (39*cos(q3)*cos(q4)*sin(q2))/100;
	jacobian(2,4) = -(39*sin(q6)*(sin(q5)*(cos(q2)*sin(q4) - cos(q3)*cos(q4)*sin(q2)) - cos(q5)*sin(q2)*sin(q3)))/500;
	jacobian(2,5) = (39*cos(q6)*(cos(q5)*(cos(q2)*sin(q4) - cos(q3)*cos(q4)*sin(q2)) + sin(q2)*sin(q3)*sin(q5)))/500 - (39*sin(q6)*(cos(q2)*cos(q4) + cos(q3)*sin(q2)*sin(q4)))/500;
	jacobian(2,6) = 0;

	//cout << "q:" << jacobian(0,0)<< endl; 
	return jacobian;
}

//matrix template, for the forward kinematics transformation matrices, input: DH parameters: d, alpha, a, theta
MatrixXd Kinematics::transformation(double d, double al, double a, double th) {
	MatrixXd matrix(4,4);
	matrix << cos(th), -sin(th)*cos(al),  sin(th)*sin(al), a*cos(th),
        	  sin(th),  cos(th)*cos(al), -cos(th)*sin(al), a*sin(th),
       		   0,           sin(al),           cos(al),        d,
        	   0,             0,                  0,            1;
	return matrix;
}

//computes the forward kinematics for the getEndEffectorVelocity() function
MatrixXd Kinematics::forwardKinematics(VectorXd& q) {
	MatrixXd aOne(4, 4), aTwo(4, 4), aThree(4, 4), aFour(4, 4), aFive(4, 4), aSix(4, 4), aSeven(4, 4), transformMat(4, 4), aQualisys(4,4);

	//aQualisys = transformation(0, 0, 0, -PI/2);	//rotation around z axis
	//the DH parameters have been aquired by inspection according to the DH norm
	aOne = transformation(0,    PI/2, 0, q[0]);

    aTwo = transformation(0,   -PI/2, 0, q[1]);

    aThree = transformation(0.4,-PI/2, 0, q[2]);

    aFour = transformation(0,   PI/2, 0, q[3]);

    aFive = transformation(0.39,PI/2, 0, q[4]);

    aSix = transformation(0,   -PI/2, 0, q[5]);

    aSeven = transformation(0, 0, 0, q[6]);

   	transformMat = aOne * aTwo * aThree * aFour * aFive * aSix * aSeven;
   	return transformMat;
}


MatrixXd Kinematics::J1(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];
	j(0,0) = 0.0274*c*cos(q1) - 1.0*b*cos(q1) - 1.0*a*sin(q1);
	j(1,0) =  a*cos(q1) - 1.0*b*sin(q1) + 0.0274*c*sin(q1);

	return j;
}

MatrixXd Kinematics::J2(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];

	j(0,0) = c*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2)) - 1.0*a*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*b*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2));
	j(0,1) = - 1.0*c*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2)) - 1.0*b*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2)) - 1.0*a*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1));


	j(1,0) = a*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*b*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 1.0*c*(0.0274*cos(q1)*sin(q2) - 1.68e-18*sin(q1) + 0.0274*cos(q2)*sin(q1));
	j(1,1) = a*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*c*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1)) - 1.0*b*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1));

	j(2,1) = a*cos(q2) - 1.0*b*sin(q2) - 0.0274*c*sin(q2);
	//the rest is zero
	return j;
}

MatrixXd Kinematics::J3(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];

	j(0,0) = 6.71e-19*cos(q1) - 0.011*cos(q1)*cos(q2) + 0.011*sin(q1)*sin(q2) + c*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*b*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*a*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)));
	j(0,1) = 0.011*sin(q1)*sin(q2) - 0.011*cos(q1)*cos(q2) - 1.0*a*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*c*(1.68e-18*cos(q1)*cos(q2) - 1.68e-18*sin(q1)*sin(q2) - 0.0274*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 0.0274*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + b*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2)));
	j(0,2) =  - c*(0.0274*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 0.0274*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*a*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - b*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)));

	j(1,0) = 6.71e-19*sin(q1) - 0.011*cos(q1)*sin(q2) - 0.011*cos(q2)*sin(q1) + 1.0*a*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*c*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*b*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)));
	j(1,1) = 1.0*b*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) - 0.011*cos(q2)*sin(q1) - 1.0*c*(1.68e-18*cos(q1)*sin(q2) + 1.68e-18*cos(q2)*sin(q1) + 0.0274*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) - 0.011*cos(q1)*sin(q2) + 1.0*a*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)));
	j(1,2) = - a*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*c*(0.0274*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 0.0274*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*b*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)));

	j(2,1) = a*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - 1.0*b*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)) - 0.011*sin(q2) - 1.0*c*(1.68e-18*sin(q2) + 0.0274*cos(q2)*sin(q3) + 0.0274*cos(q3)*sin(q2));
	j(2,2) = - 1.0*a*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*c*(0.0274*cos(q3)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*b*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17));

	return j;
}

MatrixXd Kinematics::J4(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];

	j(0,0) = 6.71e-19*cos(q1) - 0.011*cos(q1)*cos(q2) + 0.011*sin(q1)*sin(q2) + c*(6.29e-51*cos(q1) - 1.03e-34*cos(q1)*cos(q2) + 0.0274*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.03e-34*sin(q1)*sin(q2) + 1.68e-18*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 0.0274*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.68e-18*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*a*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + b*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)));
	j(0,1) = 0.011*sin(q1)*sin(q2) - 0.011*cos(q1)*cos(q2) - 1.0*c*(1.03e-34*cos(q1)*cos(q2) - 1.03e-34*sin(q1)*sin(q2) - 1.68e-18*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 0.0274*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 0.0274*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.68e-18*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + b*(1.68e-18*sin(q1)*sin(q2) - 1.68e-18*cos(q1)*cos(q2) + 0.0274*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.0*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*a*(cos(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*sin(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))));
	j(0,2) = - 1.0*a*(1.0*cos(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*c*(1.68e-18*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 0.0274*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.68e-18*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*b*(0.0274*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 0.0274*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)));
	j(0,3) = b*(1.0*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*c*(0.0274*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 0.0274*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*a*(cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))));

	j(1,0) = 6.71e-19*sin(q1) - 0.011*cos(q1)*sin(q2) - 0.011*cos(q2)*sin(q1) - 1.0*b*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*c*(1.03e-34*cos(q1)*sin(q2) - 6.29e-51*sin(q1) + 1.03e-34*cos(q2)*sin(q1) - 0.0274*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.68e-18*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.68e-18*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 0.0274*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*a*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))));
	j(1,1) = 1.0*a*(sin(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 0.011*cos(q2)*sin(q1) - 1.0*c*(1.03e-34*cos(q1)*sin(q2) + 1.03e-34*cos(q2)*sin(q1) - 0.0274*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 1.68e-18*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.68e-18*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 0.0274*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 0.011*cos(q1)*sin(q2) - 1.0*b*(1.68e-18*cos(q1)*sin(q2) + 1.68e-18*cos(q2)*sin(q1) + 1.0*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))));
	j(1,2) = - 1.0*a*(sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*c*(1.68e-18*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 0.0274*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*b*(0.0274*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))));
	j(1,3) = c*(0.0274*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*b*(1.0*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + a*(cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))));

	j(2,1) = 1.0*a*(1.0*cos(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - sin(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2))) - 0.011*sin(q2) - 1.0*c*(1.03e-34*sin(q2) + 1.68e-18*cos(q2)*sin(q3) + 1.68e-18*cos(q3)*sin(q2) - 0.0274*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - 0.0274*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2))) - 1.0*b*(1.68e-18*sin(q2) + 0.0274*cos(q2)*sin(q3) + 0.0274*cos(q3)*sin(q2) + 1.0*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) + 1.0*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)));
	j(2,2) = - 1.0*a*(sin(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + cos(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17))) - 1.0*c*(1.68e-18*cos(q3)*sin(q2) - 0.0274*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 1.68e-18*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*b*(0.0274*cos(q3)*sin(q2) + 1.0*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q3)*(1.0*cos(q2) - 6.12e-17));
	j(2,3) = 1.0*c*(0.0274*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 0.0274*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) - 1.0*a*(cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) + sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17))) - b*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33));

	return j;
}

MatrixXd Kinematics::J5(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];

	j(0,0) = 6.71e-19*cos(q1) - 0.011*cos(q1)*cos(q2) + 0.0107*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.011*sin(q1)*sin(q2) - 1.0*c*(6.29e-51*cos(q1)*cos(q2) - 3.85e-67*cos(q1) - 1.68e-18*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*sin(q5)*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 6.29e-51*sin(q1)*sin(q2) + 0.0274*cos(q5)*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.03e-34*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.68e-18*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.03e-34*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 6.55e-19*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 0.0107*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 6.55e-19*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + b*(6.29e-51*cos(q1) - 1.03e-34*cos(q1)*cos(q2) + 0.0274*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*sin(q5)*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + 1.03e-34*sin(q1)*sin(q2) + 1.0*cos(q5)*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 0.0274*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.68e-18*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*a*(1.0*cos(q5)*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*sin(q5)*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))));
	j(0,1) = 0.011*sin(q1)*sin(q2) - 0.011*cos(q1)*cos(q2) + 6.55e-19*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*c*(6.29e-51*cos(q1)*cos(q2) - 6.29e-51*sin(q1)*sin(q2) + 0.0274*cos(q5)*(1.68e-18*sin(q1)*sin(q2) - 1.68e-18*cos(q1)*cos(q2) + 0.0274*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.0*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.03e-34*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 0.0274*sin(q5)*(cos(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*sin(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2)))) + 1.68e-18*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.68e-18*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.03e-34*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 0.0107*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 0.0107*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 6.55e-19*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2)) - 1.0*b*(1.03e-34*cos(q1)*cos(q2) - 1.03e-34*sin(q1)*sin(q2) - 1.0*cos(q5)*(1.68e-18*sin(q1)*sin(q2) - 1.68e-18*cos(q1)*cos(q2) + 0.0274*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.0*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.68e-18*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*sin(q5)*(cos(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*sin(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2)))) + 0.0274*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 0.0274*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.68e-18*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + a*(sin(q5)*(1.68e-18*sin(q1)*sin(q2) - 1.68e-18*cos(q1)*cos(q2) + 0.0274*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) + 1.0*cos(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*cos(q5)*(cos(q4)*(cos(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + sin(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2))) - 1.0*sin(q4)*(0.0274*cos(q1)*cos(q2) - 0.0274*sin(q1)*sin(q2) + 1.0*sin(q3)*(cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 0.999*sin(q1)*sin(q2)))));
	j(0,2) = 0.0107*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*b*(1.0*cos(q5)*(0.0274*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 0.0274*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.68e-18*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 0.0274*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.68e-18*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 1.0*sin(q5)*(1.0*cos(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))))) - 6.55e-19*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 0.0107*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 6.55e-19*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*c*(0.0274*cos(q5)*(0.0274*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 0.0274*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.03e-34*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.68e-18*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.68e-18*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.03e-34*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 0.0274*sin(q5)*(1.0*cos(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))))) - 1.0*a*(sin(q5)*(0.0274*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*sin(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 0.0274*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + cos(q5)*(1.0*cos(q4)*(sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))));
	j(0,3) = a*(sin(q5)*(1.0*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*cos(q5)*(cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))))) - 0.0107*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*c*(0.0274*sin(q5)*(cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 1.68e-18*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*cos(q5)*(1.0*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.68e-18*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 1.0*b*(1.0*sin(q5)*(cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 0.0274*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.0*cos(q5)*(1.0*sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 0.0274*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 0.0107*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)));
	j(0,4) = b*(1.0*sin(q5)*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 1.0*cos(q5)*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))))) - 1.0*c*(0.0274*sin(q5)*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 0.0274*cos(q5)*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))))) + 1.0*a*(1.0*sin(q5)*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*cos(q5)*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))));

	j(1,0) = 6.71e-19*sin(q1) - 0.011*cos(q1)*sin(q2) - 0.011*cos(q2)*sin(q1) + 0.0107*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*a*(sin(q5)*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + cos(q5)*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))))) - 1.0*b*(1.0*cos(q5)*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 1.0*sin(q5)*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 6.29e-51*sin(q1) + 1.03e-34*cos(q1)*sin(q2) + 1.03e-34*cos(q2)*sin(q1) - 0.0274*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.68e-18*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.68e-18*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 0.0274*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 6.55e-19*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 6.55e-19*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 1.0*c*(0.0274*sin(q5)*(sin(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) - 1.0*cos(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) - 3.85e-67*sin(q1) - 0.0274*cos(q5)*(1.68e-18*cos(q1)*sin(q2) - 1.03e-34*sin(q1) + 1.68e-18*cos(q2)*sin(q1) + 1.0*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) + 1.0*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 6.29e-51*cos(q1)*sin(q2) + 6.29e-51*cos(q2)*sin(q1) - 1.68e-18*cos(q4)*(1.68e-18*sin(q1) - 0.0274*cos(q1)*sin(q2) - 0.0274*cos(q2)*sin(q1) + 1.0*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.0*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1))) + 1.03e-34*sin(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.03e-34*cos(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)) - 1.68e-18*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)))) + 0.0107*sin(q4)*(1.0*cos(q3)*(cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.0274*sin(q1) + 1.0*cos(q1)*sin(q2) + 0.999*cos(q2)*sin(q1)));
	j(1,1) = 0.0107*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) - 0.011*cos(q1)*sin(q2) - 0.011*cos(q2)*sin(q1) - 1.0*b*(1.03e-34*cos(q1)*sin(q2) + 1.03e-34*cos(q2)*sin(q1) + 1.0*sin(q5)*(sin(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) + 1.0*cos(q5)*(1.68e-18*cos(q1)*sin(q2) + 1.68e-18*cos(q2)*sin(q1) + 1.0*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 0.0274*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 1.68e-18*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.68e-18*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 0.0274*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 6.55e-19*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*c*(6.29e-51*cos(q1)*sin(q2) + 6.29e-51*cos(q2)*sin(q1) - 0.0274*sin(q5)*(sin(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 0.0274*cos(q5)*(1.68e-18*cos(q1)*sin(q2) + 1.68e-18*cos(q2)*sin(q1) + 1.0*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 1.68e-18*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 1.03e-34*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.03e-34*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 1.68e-18*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - 6.55e-19*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) + 1.0*a*(1.0*cos(q5)*(sin(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)))) - sin(q5)*(1.68e-18*cos(q1)*sin(q2) + 1.68e-18*cos(q2)*sin(q1) + 1.0*sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))) + 0.0274*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)) - 1.0*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1))))) - 0.0107*cos(q4)*(0.0274*cos(q1)*sin(q2) + 0.0274*cos(q2)*sin(q1) - 1.0*sin(q3)*(1.0*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*cos(q3)*(0.999*cos(q1)*sin(q2) + 1.0*cos(q2)*sin(q1)));
	j(1,2) = 0.0107*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 6.55e-19*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*b*(1.68e-18*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*sin(q5)*(sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 0.0274*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q5)*(0.0274*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + 1.68e-18*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 0.0274*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 6.55e-19*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*a*(cos(q5)*(sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + sin(q5)*(0.0274*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))))) - 1.0*c*(0.0274*sin(q5)*(sin(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + 1.03e-34*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.68e-18*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q5)*(0.0274*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q4)*(1.0*cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) - 1.0*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + 1.03e-34*sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)) + 1.68e-18*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 0.0107*sin(q4)*(1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) - 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)));
	j(1,3) = 0.0107*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0107*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*a*(sin(q5)*(1.0*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*cos(q5)*(cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))))) + c*(0.0274*cos(q5)*(1.0*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + 1.68e-18*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 0.0274*sin(q5)*(cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))))) - 1.0*b*(1.0*cos(q5)*(1.0*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 0.0274*sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.0*sin(q5)*(cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))));
	j(1,4) = 1.0*c*(0.0274*cos(q5)*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 0.0274*sin(q5)*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*a*(sin(q5)*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) + cos(q5)*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*b*(1.0*cos(q5)*(sin(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + cos(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2)))) - 1.0*sin(q5)*(1.03e-34*cos(q1) - 1.68e-18*cos(q1)*cos(q2) - 1.0*cos(q4)*(1.68e-18*cos(q1) - 0.0274*cos(q1)*cos(q2) + 0.0274*sin(q1)*sin(q2) - 1.0*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) + 1.68e-18*sin(q1)*sin(q2) + 0.0274*sin(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + 1.0*sin(q4)*(cos(q3)*(1.0*cos(q1)*sin(q2) + cos(q2)*sin(q1)) + sin(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))) - 0.0274*cos(q3)*(0.0274*cos(q1) + 0.999*cos(q1)*cos(q2) - 1.0*sin(q1)*sin(q2))));

	j(2,1) = 1.0*c*(0.0274*cos(q5)*(1.68e-18*sin(q2) + 0.0274*cos(q2)*sin(q3) + 0.0274*cos(q3)*sin(q2) + 1.0*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) + 1.0*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2))) - 1.03e-34*cos(q2)*sin(q3) - 1.03e-34*cos(q3)*sin(q2) - 6.29e-51*sin(q2) + 1.68e-18*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) + 1.68e-18*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)) + 0.0274*sin(q5)*(1.0*cos(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - 1.0*sin(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)))) - 6.55e-19*cos(q2)*sin(q3) - 6.54e-19*cos(q3)*sin(q2) - 0.011*sin(q2) + 0.0107*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) + 0.0107*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)) - 1.0*a*(sin(q5)*(1.68e-18*sin(q2) + 0.0274*cos(q2)*sin(q3) + 0.0274*cos(q3)*sin(q2) + 1.0*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) + 1.0*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2))) - 1.0*cos(q5)*(1.0*cos(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - 1.0*sin(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)))) - 1.0*b*(1.03e-34*sin(q2) + 1.68e-18*cos(q2)*sin(q3) + 1.68e-18*cos(q3)*sin(q2) + 1.0*cos(q5)*(1.68e-18*sin(q2) + 0.0274*cos(q2)*sin(q3) + 0.0274*cos(q3)*sin(q2) + 1.0*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) + 1.0*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2))) - 0.0274*sin(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - 0.0274*cos(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2)) + 1.0*sin(q5)*(1.0*cos(q4)*(cos(q2)*cos(q3) - 1.0*sin(q2)*sin(q3)) - 1.0*sin(q4)*(1.0*cos(q2)*sin(q3) - 0.0274*sin(q2) + 0.999*cos(q3)*sin(q2))));
	j(2,2) = 0.0107*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*b*(1.0*cos(q5)*(0.0274*cos(q3)*sin(q2) + 1.0*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 1.68e-18*cos(q3)*sin(q2) - 0.0274*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q5)*(sin(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + cos(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17))) + 0.0274*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 1.68e-18*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 6.55e-19*cos(q3)*sin(q2) - 0.0107*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) - 6.55e-19*sin(q3)*(1.0*cos(q2) - 6.12e-17) - 1.0*c*(1.03e-34*cos(q3)*sin(q2) - 0.0274*cos(q5)*(0.0274*cos(q3)*sin(q2) + 1.0*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.68e-18*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q5)*(sin(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + cos(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17))) + 1.68e-18*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 1.03e-34*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*a*(sin(q5)*(0.0274*cos(q3)*sin(q2) + 1.0*cos(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + cos(q5)*(sin(q4)*(1.0*cos(q3)*sin(q2) + 1.0*sin(q3)*(1.0*cos(q2) - 6.12e-17)) + cos(q4)*(sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17))));
	j(2,3) = 0.0107*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 0.0107*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) - 1.0*a*(1.0*cos(q5)*(cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) + sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17))) + sin(q5)*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33))) + 1.0*c*(0.0274*cos(q5)*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) - 0.0274*sin(q5)*(cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) + sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17))) + 1.68e-18*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.68e-18*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) - 1.0*b*(1.0*cos(q5)*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) - 1.0*sin(q5)*(cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) + sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17))) - 0.0274*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33));
	j(2,4) = 1.0*c*(0.0274*cos(q5)*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) + 0.0274*sin(q5)*(1.68e-18*cos(q2) - 0.0274*sin(q2)*sin(q3) - 1.0*cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) - 1.0*sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 2.3e-49)) - 1.0*b*(1.0*cos(q5)*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) + 1.0*sin(q5)*(1.68e-18*cos(q2) - 0.0274*sin(q2)*sin(q3) - 1.0*cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) - 1.0*sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 2.3e-49)) - 1.0*a*(sin(q5)*(1.0*cos(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) - 1.0*sin(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33)) - 1.0*cos(q5)*(1.68e-18*cos(q2) - 0.0274*sin(q2)*sin(q3) - 1.0*cos(q4)*(0.0274*cos(q2) + 1.0*sin(q2)*sin(q3) - 1.0*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 3.75e-33) - 1.0*sin(q4)*(cos(q3)*sin(q2) + sin(q3)*(1.0*cos(q2) - 6.12e-17)) + 0.0274*cos(q3)*(1.0*cos(q2) - 6.12e-17) + 2.3e-49));

	//j = MatrixXd::Zero(3,7);	//uncomment if jacobian not needed

	return j;
}

//these two matrices are too big for matlab to show..
MatrixXd Kinematics::J6(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];


	return j;
}

MatrixXd Kinematics::J7(VectorXd& q) {
	MatrixXd j = MatrixXd::Zero(3,7); //3 cartesian dimensions, 7 joints
	double q1 = q[0], q2 = q[1], q3 = q[2], q4 = q[3], q5 = q[4], q6 = q[5], q7 = q[6];


	return j;
}
//computes the Jacobian of the closest point to the obstacle, uses q and closestJoint and a,b,c (from subscriber)
MatrixXd Kinematics::getJ0(VectorXd& q) {
	//cout << "J0 q1: " << q[0] << endl;
	MatrixXd J0 = MatrixXd::Zero(3,7);
	switch(closestJoint) {
		case 1: J0 = J1(q);
				//cout << "J1" << endl;
			break;
		case 2:	J0 = J2(q);
				//cout << "J2" << endl;
			break;
		case 3: J0 = J3(q);
				//cout << "J3" << endl;
			break;
		case 4: J0 = J4(q);
				//cout << "J4" << endl;
			break;
		case 5: J0 = J5(q);
				//cout << "J5" << endl;
			break;
		case 6: J0 = J6(q);
				//cout << "J6" << endl;
			break;
		case 7: J0 = J7(q);
				//cout << "J7" << endl;
			break;
		default: cout << "Error computing J0." << endl;
			break;
	}
	return J0;
}
